{"version":3,"sources":["App/manageHistorikk.ts","AppContext.tsx","injectTotalScore.ts","Components/Skjema.ts","App/Runder/Setup.tsx","Components/ScoreControll.tsx","Components/ScoreTable.tsx","Components/GenericScoreBoard.tsx","App/Runder/Pass.tsx","App/Runder/Kløver.tsx","App/Runder/Kabal.tsx","App/Runder/Dame.tsx","App/Runder/Grang.tsx","App/Runder/GameOver.tsx","App/Navigation.tsx","Components/ExpandablePanel.tsx","App/Runder/Historikk.tsx","App/App.tsx","serviceWorker.ts","index.tsx"],"names":["Runder","localStorage","window","defaultScore","pass","kløver","kabal","rest","dame","grang","total","localstorageSpillere","getItem","initialState","spillere","JSON","parse","runde","Oppsett","addSpiller","updateScore","setRunde","removeSpiller","lagreOgStartPåNytt","GameContext","createContext","GameContextProvider","props","useState","setSpillere","spillereMedTotalScore","map","spiller","currentScore","score","totalScore","injectTotalScore","sortedSpillere","sort","a","b","navn","setItem","stringify","Provider","value","historikk","klarForLagring","dato","Date","lagreSpill","prevState","filter","it","updatedSpiller","children","commonStyling","css","Button","styled","button","Input","input","Style","div","StyledForm","form","SpillerListe","ul","UsualSuspectsStyling","usualSuspects","Setup","context","useContext","setInput","includes","key","onClick","onSubmit","event","preventDefault","placeholder","onChange","e","target","ScoreStyle","StyledInput","StyledButton","Scroller","StyledLi","li","NavnStyle","ScoreControll","customScorer","type","setScore","Array","Math","abs","scoreRule","maxScore","interval","index","StyledTable","table","ScoreTableRad","ScoreTable","StyledUl","Oppsummering","GenericScoreBoard","useMemo","floor","length","antallSpillere","reduce","acc","current","Kløver","KabalRad","updatePass","handleClick","console","log","passControll","onContextMenu","Kabal","StyledOl","ol","winnerAnimation","keyframes","loserAnimations","delay","GameOver","sortertEtterTotalScore","StyledNav","nav","align","Navigation","rundeNummer","forrigeRunde","undefined","nesteRunde","Object","keys","ButtonStyle","Chevron","span","direction","ExpandablePanel","isOpen","setIsOpen","buttonText","StyledHistorikk","IngenHistorikkStyle","TextStyle","Historikk","setHistorikk","useEffect","item","parsedHistorikk","reverse","spill","i","datoString","getDate","toString","padStart","getMonth","getFullYear","spillerNavn","join","GlobalStyle","createGlobalStyle","StyledH1","h1","StyledH2","h2","Scrollbar","Runde","Pass","Dame","Grang","App","ref","useRef","scrollTo","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.31984e34.chunk.js","sourcesContent":["import { Spiller } from '../AppContext';\n\nconst localStorage = window.localStorage;\n\nexport interface HistorikkSpill {\n    spillere: Spiller[];\n    dato: Date;\n}\n\nexport function lagreSpill(spillere: Spiller[]) {\n    const historikk = JSON.parse(localStorage.getItem('historikk') || '[]');\n    const klarForLagring: HistorikkSpill = {\n        dato: new Date(),\n        spillere: spillere,\n    };\n    localStorage.setItem('historikk', JSON.stringify([...historikk, klarForLagring]));\n}\n","import React, { createContext, ReactNode, useState } from 'react';\nimport { injectTotalScore } from './injectTotalScore';\nimport { lagreSpill } from './App/manageHistorikk';\n\nexport interface Score {\n    pass: number;\n    kløver: number;\n    kabal: {\n        pass: number;\n        rest: number;\n    };\n    dame: number;\n    grang: number;\n    total: number;\n}\n\nexport interface Spiller {\n    navn: string;\n    score: Score;\n}\n\nexport enum Runder {\n    Historikk,\n    Oppsett,\n    Pass,\n    Kløver,\n    Kabal,\n    Dame,\n    Grang,\n    GameOver,\n}\n\ninterface GameContextI {\n    runde: Runder;\n    spillere: Spiller[];\n    addSpiller: (navn: string) => void;\n    updateScore: (spiller: Spiller, score: Partial<Score>) => void;\n    setRunde: (runde: Runder) => void;\n    removeSpiller: (spiller: Spiller) => void;\n    lagreOgStartPåNytt: () => void;\n}\n\nconst defaultScore: Score = {\n    pass: 0,\n    kløver: 0,\n    kabal: {\n        pass: 0,\n        rest: 0,\n    },\n    dame: 0,\n    grang: 0,\n    total: 0,\n};\n\nconst localStorage = window.localStorage;\n\nconst localstorageSpillere = localStorage.getItem('spillere');\n\nconst initialState: GameContextI = {\n    spillere: localstorageSpillere ? JSON.parse(localstorageSpillere) : [],\n    runde: Runder.Oppsett,\n    addSpiller: () => null,\n    updateScore: () => null,\n    setRunde: () => null,\n    removeSpiller: () => null,\n    lagreOgStartPåNytt: () => null,\n};\n\nexport const GameContext = createContext<GameContextI>(initialState);\n\nexport function GameContextProvider(props: { children: ReactNode }) {\n    const [runde, setRunde] = useState<Runder>(initialState.runde);\n    const [spillere, setSpillere] = useState<Spiller[]>(initialState.spillere);\n\n    const addSpiller = (navn: string) => {\n        setSpillere((prevState) => [\n            ...prevState.filter((it) => it.navn !== navn),\n            { navn: navn, score: defaultScore },\n        ]);\n    };\n\n    const updateScore = (spiller: Spiller, score: Partial<Score>) => {\n        const updatedSpiller = {\n            ...spiller,\n            score: {\n                ...spiller.score,\n                ...score,\n            },\n        };\n        setSpillere((prevState) => [...prevState.filter((it) => it.navn !== spiller.navn), updatedSpiller]);\n    };\n\n    const removeSpiller = (spiller: Spiller) => {\n        setSpillere((prevState) => [...prevState.filter((it) => it.navn !== spiller.navn)]);\n    };\n\n    const spillereMedTotalScore = injectTotalScore(spillere);\n    const sortedSpillere = spillereMedTotalScore.sort((a, b) => (a.navn > b.navn ? 1 : -1));\n\n    localStorage.setItem('spillere', JSON.stringify(spillereMedTotalScore));\n    const lagreOgStartPåNytt = () => {\n        lagreSpill(spillereMedTotalScore);\n        setSpillere([]);\n        setRunde(Runder.Oppsett);\n    };\n\n    return (\n        <GameContext.Provider\n            value={{\n                setRunde,\n                spillere: sortedSpillere,\n                runde,\n                lagreOgStartPåNytt,\n                addSpiller,\n                updateScore,\n                removeSpiller,\n            }}\n        >\n            {props.children}\n        </GameContext.Provider>\n    );\n}\n","import { Spiller } from './AppContext';\n\nexport function injectTotalScore(spillere: Spiller[]): Spiller[] {\n    return spillere.map((spiller) => {\n        const currentScore = spiller.score;\n        const totalScore =\n            (currentScore.pass ?? 0) +\n            (currentScore.kløver ?? 0) +\n            (currentScore.kabal?.pass ?? 0) +\n            (currentScore.kabal?.rest ?? 0) +\n            (currentScore.dame ?? 0) +\n            (currentScore.grang ?? 0);\n\n        return {\n            ...spiller,\n            score: {\n                ...currentScore,\n                total: totalScore,\n            },\n        };\n    });\n}\n","import styled, { css } from 'styled-components/macro';\n\nconst commonStyling = css`\n    background-color: #5555;\n    color: lightgoldenrodyellow;\n    font-family: inherit;\n    font-size: inherit;\n    border: 0.2rem solid #fff5;\n    padding: 0.2rem 0.5rem;\n`;\n\nexport const Button = styled.button`\n    ${commonStyling};\n`;\n\nexport const Input = styled.input`\n    ${commonStyling};\n`;\n","import * as React from 'react';\nimport { useContext, useState } from 'react';\nimport { GameContext } from '../../AppContext';\nimport styled from 'styled-components';\nimport { Button, Input } from '../../Components/Skjema';\n\nconst Style = styled.div`\n    padding: 2rem 0 3rem;\n    text-align: center;\n`;\n\nconst StyledForm = styled.form`\n    display: flex;\n    justify-content: center;\n    > * {\n        margin: 0.5rem;\n    }\n    margin-bottom: 1rem;\n    ${Input} {\n        min-width: 0;\n    }\n    ${Button} {\n        white-space: nowrap;\n    }\n`;\n\nconst SpillerListe = styled.ul`\n    margin-top: 1rem;\n    font-size: 1.6rem;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    li {\n        margin: 0.5rem 1.5rem;\n    }\n`;\n\nconst UsualSuspectsStyling = styled.div`\n    padding: 0.5rem 0;\n    > * {\n        margin: 0.3rem;\n    }\n`;\n\nconst usualSuspects = [\n    'Heidi',\n    'Jon',\n    'Ida',\n    'Daniel',\n    'Edgar',\n    'Kari',\n    'Irene',\n    'Einar',\n    'Grete',\n    'Liv Marit',\n    'Ove',\n    'Siri',\n    'Håvard',\n    'Øyvind',\n    'Line',\n].sort();\n\nfunction Setup() {\n    const context = useContext(GameContext);\n    const [input, setInput] = useState('');\n\n    const onSubmit = (event: React.FormEvent) => {\n        event.preventDefault();\n        input && context.addSpiller(input);\n        setInput('');\n    };\n\n    return (\n        <Style>\n            <h3>Usual suspects</h3>\n            <UsualSuspectsStyling>\n                {usualSuspects\n                    .filter((navn) => !context.spillere.map((spiller) => spiller.navn).includes(navn))\n                    .map((navn) => (\n                        <Button key={navn} onClick={() => context.addSpiller(navn)}>\n                            {navn}\n                        </Button>\n                    ))}\n            </UsualSuspectsStyling>\n            <StyledForm onSubmit={onSubmit}>\n                <Input placeholder=\"Legg til spiller\" value={input} onChange={(e) => setInput(e.target.value)} />\n                <Button>Legg til</Button>\n            </StyledForm>\n            <h3>Spillere</h3>\n            <SpillerListe>\n                {context.spillere.map((spiller) => (\n                    <li key={spiller.navn} onClick={() => context.removeSpiller(spiller)}>\n                        {spiller.navn}\n                    </li>\n                ))}\n            </SpillerListe>\n        </Style>\n    );\n}\n\nexport default Setup;\n","import * as React from 'react';\nimport styled, { css } from 'styled-components';\nimport { Button, Input } from './Skjema';\nimport { ReactNode } from 'react';\n\nexport type ScoreRule = {\n    maxScore: number;\n    interval: number;\n};\n\ninterface Props {\n    setScore: (score: number) => void;\n    score?: number;\n    navn: string;\n    antallSpillere: number;\n    scoreRule: ScoreRule;\n    key: string;\n    customScorer?: ReactNode;\n}\n\nconst ScoreStyle = styled.div`\n    display: flex;\n    margin-top: 0.5rem;\n`;\nconst StyledInput = styled(Input)`\n    width: 3rem;\n`;\nconst StyledButton = styled(Button)<{ currentScore: boolean }>`\n    min-width: 2.5rem;\n    margin-left: 0.2rem;\n    ${(props) =>\n        props.currentScore &&\n        css`\n            box-shadow: inset 0 0 0.75rem gold;\n        `}\n`;\n\nconst Scroller = styled.div`\n    display: inline-flex;\n    overflow-x: auto;\n    margin-left: 0.5rem;\n`;\n\nconst StyledLi = styled.li`\n    padding: 0.5rem;\n    background-color: #0003;\n    margin: 0.5rem.1rem;\n`;\n\nconst NavnStyle = styled.div``;\n\nexport function ScoreControll(props: Props) {\n    return (\n        <StyledLi>\n            <NavnStyle>{props.navn}</NavnStyle>\n            <ScoreStyle>\n                {props.customScorer}\n                <StyledInput\n                    type=\"number\"\n                    value={props.score}\n                    onChange={(event) => props.setScore(+event.target.value)}\n                />\n                <Scroller>\n                    {[...new Array(Math.abs(props.scoreRule.maxScore / props.scoreRule.interval) + 1)].map(\n                        (it, index) => {\n                            let score = index * props.scoreRule.interval;\n                            if (props.scoreRule.maxScore < 0) {\n                                score = -score;\n                            }\n                            return (\n                                <StyledButton\n                                    currentScore={props.score === score}\n                                    key={index}\n                                    onClick={() => props.setScore(score)}\n                                >\n                                    {score}\n                                </StyledButton>\n                            );\n                        }\n                    )}\n                </Scroller>\n            </ScoreStyle>\n        </StyledLi>\n    );\n}\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { Spiller } from '../AppContext';\n\nconst StyledTable = styled.table`\n    border-collapse: collapse;\n    width: 100%;\n\n    th,\n    td {\n        padding: 0.2rem 0.1rem;\n        text-align: center;\n        font-weight: normal;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        max-width: 0;\n\n        // Total sum\n        &:first-child {\n            text-align: left;\n        }\n        &:last-child {\n            font-weight: bold;\n        }\n    }\n\n    margin-bottom: 1rem;\n`;\n\nconst ScoreTableRad = (props: { spiller: Spiller }) => {\n    const { navn, score } = props.spiller;\n    return (\n        <tr>\n            <td>{navn}</td>\n            <td>{score.pass}</td>\n            <td>{score.kløver}</td>\n            <td>{score.kabal?.rest + score.kabal?.pass}</td>\n            <td>{score.dame}</td>\n            <td>{score.grang}</td>\n            <td>{score.total}</td>\n        </tr>\n    );\n};\n\nfunction ScoreTable(props: { spillere: Spiller[] }) {\n    return (\n        <StyledTable>\n            <thead>\n                <tr>\n                    <th></th>\n                    <th>Pass</th>\n                    <th>Kløver</th>\n                    <th>Kabal</th>\n                    <th>Dame</th>\n                    <th>Grang</th>\n                    <th>Total</th>\n                </tr>\n            </thead>\n            <tbody>\n                {props.spillere.map((spiller) => (\n                    <ScoreTableRad spiller={spiller} key={spiller.navn} />\n                ))}\n            </tbody>\n        </StyledTable>\n    );\n}\n\nexport default ScoreTable;\n","import * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport styled from 'styled-components/macro';\nimport { GameContext, Runder } from '../AppContext';\nimport { ScoreControll, ScoreRule } from './ScoreControll';\nimport ScoreTable from './ScoreTable';\n\nconst Style = styled.div`\n    margin: 2rem 0;\n`;\n\nconst StyledUl = styled.ul`\n    max-width: 100vw;\n`;\n\nconst Oppsummering = styled.div`\n    background-color: #0004;\n    padding: 1rem;\n    margin: 0.1rem 0.1rem 1rem;\n    text-align: center;\n`;\n\ninterface Props {\n    runde: 'pass' | 'kløver' | 'dame' | 'grang';\n}\n\nfunction GenericScoreBoard(props: Props) {\n    const context = useContext(GameContext);\n\n    const scoreRule: ScoreRule = useMemo(() => {\n        const maxScore = Math.floor(52 / context.spillere.length);\n\n        switch (props.runde) {\n            case 'grang':\n                return { maxScore: -maxScore, interval: 1 };\n            case 'dame':\n                return { maxScore: 16, interval: 4 };\n            case 'kløver':\n                return { maxScore: 13, interval: 1 };\n            default:\n                return { maxScore: maxScore, interval: 1 };\n        }\n    }, [props.runde, context.spillere.length]);\n\n    return (\n        <Style>\n            <StyledUl>\n                {context.spillere.map((spiller) => (\n                    <ScoreControll\n                        key={spiller.navn}\n                        setScore={(score) => context.updateScore(spiller, { [props.runde]: score })}\n                        score={spiller.score[props.runde]}\n                        navn={spiller.navn}\n                        antallSpillere={context.spillere.length}\n                        scoreRule={scoreRule}\n                    />\n                ))}\n            </StyledUl>\n            <Oppsummering>\n                Totalt {context.spillere.reduce((acc, current) => acc + current.score[props.runde], 0)} poeng\n            </Oppsummering>\n            <ScoreTable spillere={context.spillere} />\n        </Style>\n    );\n}\n\nexport default GenericScoreBoard;\n","import * as React from 'react';\nimport GenericScoreBoard from '../../Components/GenericScoreBoard';\n\nfunction Kløver() {\n    return <GenericScoreBoard runde=\"pass\" />;\n}\n\nexport default Kløver;\n","import * as React from 'react';\nimport GenericScoreBoard from '../../Components/GenericScoreBoard';\n\nfunction Kløver() {\n    return <GenericScoreBoard runde=\"kløver\" />;\n}\n\nexport default Kløver;\n","import * as React from 'react';\nimport { useContext } from 'react';\nimport { GameContext, Spiller } from '../../AppContext';\nimport styled from 'styled-components';\nimport { ScoreControll, ScoreRule } from '../../Components/ScoreControll';\nimport { Button } from '../../Components/Skjema';\nimport useLongPress from '../../utils/useLongPress';\nimport ScoreTable from '../../Components/ScoreTable';\n\nconst Style = styled.div`\n    margin: 2rem 0;\n`;\n\nconst StyledUl = styled.ul`\n    max-width: 100vw;\n`;\n\nconst Oppsummering = styled.div`\n    background-color: #0004;\n    padding: 1rem;\n    margin: 0.1rem 0.1rem 1rem;\n    text-align: center;\n`;\n\nconst StyledButton = styled(Button)`\n    white-space: nowrap;\n    margin-right: 0.6rem;\n    user-select: none;\n`;\n\nfunction KabalRad({ spiller }: { spiller: Spiller }) {\n    const context = useContext(GameContext);\n    const antallSpillere = context.spillere.length;\n    const scoreRule: ScoreRule = {\n        maxScore: Math.floor(52 / antallSpillere),\n        interval: 1,\n    };\n    const currentScore = spiller.score.kabal;\n\n    const updateRest = (rest: number) =>\n        context.updateScore(spiller, {\n            kabal: {\n                ...currentScore,\n                rest: rest,\n            },\n        });\n\n    const updatePass = (pass: number) =>\n        context.updateScore(spiller, {\n            kabal: {\n                ...currentScore,\n                pass: pass,\n            },\n        });\n\n    const handleClick = (event: React.MouseEvent) => {\n        switch (event.type) {\n            case 'contextmenu':\n                event.preventDefault();\n                currentScore.pass > 0 && updatePass(currentScore.pass - 1);\n                return;\n            case 'click':\n                updatePass(currentScore.pass + 1);\n                console.log('click');\n                return;\n        }\n    };\n\n    const passControll = (\n        <StyledButton onClick={handleClick} onContextMenu={handleClick}>\n            Pass {currentScore.pass}\n        </StyledButton>\n    );\n\n    return (\n        <ScoreControll\n            setScore={updateRest}\n            score={currentScore?.rest}\n            navn={spiller.navn}\n            antallSpillere={antallSpillere}\n            scoreRule={scoreRule}\n            key={spiller.navn}\n            customScorer={passControll}\n        />\n    );\n}\n\nfunction Kabal() {\n    const context = useContext(GameContext);\n\n    return (\n        <Style>\n            <StyledUl>\n                {context.spillere.map((spiller) => (\n                    <KabalRad key={spiller.navn} spiller={spiller} />\n                ))}\n            </StyledUl>\n            <Oppsummering>\n                Totalt{' '}\n                {context.spillere.reduce(\n                    (acc, current) => acc + current.score.kabal.pass + current.score.kabal.rest,\n                    0\n                )}{' '}\n                poeng.\n            </Oppsummering>\n            <ScoreTable spillere={context.spillere} />\n        </Style>\n    );\n}\n\nexport default Kabal;\n","import * as React from 'react';\nimport GenericScoreBoard from '../../Components/GenericScoreBoard';\n\nfunction Kløver() {\n    return <GenericScoreBoard runde=\"dame\" />;\n}\n\nexport default Kløver;\n","import * as React from 'react';\nimport GenericScoreBoard from '../../Components/GenericScoreBoard';\n\nfunction Kløver() {\n    return <GenericScoreBoard runde=\"grang\" />;\n}\n\nexport default Kløver;\n","import * as React from 'react';\nimport { useContext } from 'react';\nimport { GameContext } from '../../AppContext';\nimport styled, { keyframes } from 'styled-components/macro';\nimport { Button } from '../../Components/Skjema';\nimport ScoreTable from '../../Components/ScoreTable';\n\nconst StyledOl = styled.ol`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem 0 4rem;\n`;\n\nconst winnerAnimation = keyframes`\n  from {\n    transform: scale(10) rotate(15deg);\n  }\n  50% {\n    transform: scale(.7);\n  }\n`;\n\nconst loserAnimations = keyframes`\n  from {\n    transform: translateY(-3rem);\n    opacity: 0;\n  }\n  10% {\n    opacity: 1;\n  }\n  60% {\n    transform: translateY(.5rem);\n  }\n`;\n\nconst StyledLi = styled.li<{ delay: number }>`\n    padding: 0.2rem 0;\n    &:first-child {\n        animation: ${winnerAnimation} 0.5s both;\n        font-weight: bold;\n        font-size: 5rem;\n    }\n    &:not(:first-child) {\n        animation: ${loserAnimations} 0.2s ${(props) => props.delay}s both;\n        font-size: 1.5rem;\n    }\n`;\n\nconst StyledButton = styled(Button)<{ delay: number }>`\n    margin: 2rem 0;\n    padding: 0.5rem 2rem;\n    animation: ${loserAnimations} 0.4s ${(props) => props.delay}s both;\n`;\n\nfunction GameOver() {\n    const context = useContext(GameContext);\n    const sortertEtterTotalScore = context.spillere.sort((a, b) => a.score.total - b.score.total);\n\n    return (\n        <StyledOl>\n            {sortertEtterTotalScore.map((spiller, index) => (\n                <StyledLi delay={0.7 + index / 4} key={index}>\n                    {spiller.navn}: {spiller.score.total}\n                </StyledLi>\n            ))}\n            <StyledButton delay={context.spillere.length * 0.3 + 0.7} onClick={() => context.lagreOgStartPåNytt()}>\n                Lagre og start nytt spill\n            </StyledButton>\n            <ScoreTable spillere={sortertEtterTotalScore} />\n        </StyledOl>\n    );\n}\n\nexport default GameOver;\n","import * as React from 'react';\nimport { useContext } from 'react';\nimport styled, { css } from 'styled-components';\nimport { GameContext, Runder } from '../AppContext';\nimport { Button } from '../Components/Skjema';\n\nconst StyledNav = styled.nav`\n    background-color: #0003;\n    display: flex;\n    justify-content: space-between;\n    box-shadow: 0 -1rem 1rem #0006;\n`;\n\nconst StyledButton = styled(Button)<{ align: 'left' | 'right' }>`\n    padding: 0.3rem 2rem;\n    ${(props) =>\n        props.align === 'right' &&\n        css`\n            margin-left: auto;\n        `};\n`;\n\nfunction Navigation() {\n    const context = useContext(GameContext);\n    const rundeNummer = context.runde;\n    const forrigeRunde = rundeNummer - 1 < 0 ? undefined : Runder[rundeNummer - 1];\n    const nesteRunde = rundeNummer + 1 > Object.keys(Runder).length ? undefined : Runder[rundeNummer + 1];\n\n    return (\n        <StyledNav>\n            {forrigeRunde && (\n                <StyledButton align=\"left\" onClick={() => context.setRunde(rundeNummer - 1)}>\n                    {forrigeRunde}\n                </StyledButton>\n            )}\n            {nesteRunde && (\n                <StyledButton align=\"right\" onClick={() => context.setRunde(rundeNummer + 1)}>\n                    {nesteRunde}\n                </StyledButton>\n            )}\n        </StyledNav>\n    );\n}\n\nexport default Navigation;\n","import * as React from 'react';\nimport { ReactNode, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { Button } from './Skjema';\n\nconst ButtonStyle = styled(Button)`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n`;\n\nconst Chevron = styled.span<{ direction: string }>`\n    &::before {\n        border-style: solid;\n        border-width: 0.12em 0.12em 0 0;\n        content: '';\n        display: inline-block;\n        height: 0.45em;\n        width: 0.45em;\n        margin: 0.2rem 0.2rem 0 0.3rem;\n        transform: rotate(-45deg);\n    }\n\n    ${(props) =>\n        props.direction === 'down' &&\n        css`\n            &&::before {\n                margin: 0 0.2rem 0.2rem 0.3rem;\n\n                transform: rotate(135deg);\n            }\n        `}\n`;\n\ninterface Props {\n    buttonText: ReactNode;\n    children: React.ReactElement;\n}\n\nfunction ExpandablePanel(props: Props) {\n    const [isOpen, setIsOpen] = useState<boolean>(false);\n\n    return (\n        <>\n            <ButtonStyle onClick={() => setIsOpen(!isOpen)}>\n                <span>{props.buttonText}</span> <Chevron direction={isOpen ? 'up' : 'down'} />\n            </ButtonStyle>\n            {isOpen && <div>{props.children}</div>}\n        </>\n    );\n}\n\nexport default ExpandablePanel;\n","import * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { HistorikkSpill } from '../manageHistorikk';\nimport ExpandablePanel from '../../Components/ExpandablePanel';\nimport ScoreTable from '../../Components/ScoreTable';\n\nconst Style = styled.div`\n    margin: 6vmin 0;\n`;\n\nconst StyledHistorikk = styled.div`\n    margin: 0.5rem auto;\n    max-width: 30rem;\n`;\n\nconst IngenHistorikkStyle = styled.div`\n    padding: 2rem 1rem;\n    text-align: center;\n`;\n\nconst TextStyle = styled.div`\n    display: flex;\n    text-align: left;\n    > *:last-child {\n        margin-left: 0.5rem;\n    }\n`;\n\nfunction Historikk() {\n    const [historikk, setHistorikk] = useState<HistorikkSpill[] | undefined>(undefined);\n    useEffect(() => {\n        const item = localStorage.getItem('historikk');\n\n        if (item) {\n            const parsedHistorikk: HistorikkSpill[] = JSON.parse(item);\n            setHistorikk(parsedHistorikk.reverse());\n        }\n    }, []);\n\n    if (!historikk) {\n        return (\n            <IngenHistorikkStyle>\n                Du har ingen historikk.\n                <br />\n                <br />\n                Start et nytt spill ved å gå videre til oppsett.\n            </IngenHistorikkStyle>\n        );\n    }\n\n    return (\n        <Style>\n            {historikk.map((spill, i) => {\n                const dato = new Date(spill.dato);\n                const datoString =\n                    dato.getDate().toString().padStart(2, '0') +\n                    '.' +\n                    dato.getMonth().toString().padStart(2, '0') +\n                    '.' +\n                    dato.getFullYear();\n                const spillerNavn = spill.spillere.map((spiller) => spiller.navn);\n                const buttonText = (\n                    <TextStyle>\n                        <span>{datoString}</span>\n                        <span>{spillerNavn.join(', ')}</span>\n                    </TextStyle>\n                );\n                return (\n                    <StyledHistorikk key={i}>\n                        <ExpandablePanel buttonText={buttonText}>\n                            <ScoreTable spillere={spill.spillere} />\n                        </ExpandablePanel>\n                    </StyledHistorikk>\n                );\n            })}\n        </Style>\n    );\n}\n\nexport default Historikk;\n","import React, { useContext, useEffect, useRef } from 'react';\nimport { GameContext, Runder } from '../AppContext';\nimport Setup from './Runder/Setup';\nimport Pass from './Runder/Pass';\nimport Kløver from './Runder/Kløver';\nimport Kabal from './Runder/Kabal';\nimport Dame from './Runder/Dame';\nimport Grang from './Runder/Grang';\nimport GameOver from './Runder/GameOver';\nimport styled, { createGlobalStyle } from 'styled-components/macro';\nimport Navigation from './Navigation';\nimport Historikk from './Runder/Historikk';\n\nconst GlobalStyle = createGlobalStyle`\n  html, body {\n    background-color: #555;\n    color: lightgoldenrodyellow;\n    height: 100vh;\n    font-size: calc(100% + 1vmin);\n    \n    *:focus {\n      filter: drop-shadow(0 0 .2rem yellow);\n      outline: none;\n    }\n    \n    input[type=number]::-webkit-inner-spin-button,\n    input[type=number]::-webkit-outer-spin-button {\n        -webkit-appearance: none;\n        margin: 0;\n    }\n    * {\n      box-sizing: border-box;\n    }\n }\n`;\n\nconst Style = styled.div`\n    display: grid;\n    height: 100vh;\n    grid-template-rows: auto auto 1fr auto;\n    grid-template-columns: 1fr;\n`;\n\nconst StyledH1 = styled.h1`\n    background-color: #0003;\n    padding: 0.7rem 0.5rem;\n    text-align: center;\n`;\n\nconst StyledH2 = styled.h2`\n    background-color: #fff1;\n    padding: 0.4rem;\n    text-align: center;\n    font-size: 1.3rem;\n    box-shadow: 0 0.5rem 0.5rem #0006;\n`;\n\nconst Scrollbar = styled.div`\n    overflow-x: auto;\n`;\n\nfunction Runde() {\n    const runde = useContext(GameContext).runde;\n    switch (runde) {\n        case Runder.Historikk:\n            return <Historikk />;\n        case Runder.Oppsett:\n            return <Setup />;\n        case Runder.Pass:\n            return <Pass />;\n        case Runder.Kløver:\n            return <Kløver />;\n        case Runder.Dame:\n            return <Dame />;\n        case Runder.Kabal:\n            return <Kabal />;\n        case Runder.Grang:\n            return <Grang />;\n        case Runder.GameOver:\n            return <GameOver />;\n    }\n}\n\nfunction App() {\n    const runde = useContext(GameContext).runde;\n    const ref = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        ref.current?.scrollTo(0, 0);\n    }, [runde]);\n\n    return (\n        <Style>\n            <GlobalStyle />\n            <StyledH1>Femkamp</StyledH1>\n            <StyledH2>{Runder[runde]}</StyledH2>\n            <Scrollbar ref={ref}>\n                <Runde />\n            </Scrollbar>\n            <Navigation />\n        </Style>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './reset.css';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { GameContextProvider } from './AppContext';\n\nReactDOM.render(\n    <React.StrictMode>\n        <GameContextProvider>\n            <App />\n        </GameContextProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}