{"version":3,"sources":["App/manageHistorikk.ts","AppContext.tsx","injectTotalScore.ts","Components/Skjema.ts","App/Runder/Setup.tsx","Components/ScoreControll.tsx","Components/GenericScoreBoard.tsx","App/Runder/Pass.tsx","App/Runder/Kløver.tsx","App/Runder/Kabal.tsx","App/Runder/Dronning.tsx","App/Runder/Grang.tsx","App/Runder/GameOver.tsx","App/Navigation.tsx","App/App.tsx","serviceWorker.ts","index.tsx"],"names":["Runder","localStorage","window","localstorageSpillere","getItem","initialState","spillere","JSON","parse","runde","Oppsett","addSpiller","updateScore","setRunde","removeSpiller","lagreOgStartPåNytt","GameContext","createContext","GameContextProvider","props","useState","setSpillere","spillereMedTotalScore","map","spiller","totalScore","score","pass","kløver","kabal","rest","dronning","grang","total","injectTotalScore","sortedSpillere","sort","a","b","navn","setItem","stringify","Provider","value","historikk","klarForLagring","dato","Date","lagreSpill","prevState","filter","it","updatedSpiller","children","commonStyling","css","Button","styled","button","Input","input","Style","div","StyledForm","form","SpillerListe","ul","UsualSuspectsStyling","usualSuspects","Setup","context","useContext","setInput","onSubmit","event","preventDefault","placeholder","onChange","e","target","includes","key","onClick","ScoreStyle","StyledInput","StyledButton","currentScore","Scroller","StyledLi","li","NavnStyle","ScoreControll","type","setScore","Array","Math","abs","scoreRule","maxScore","interval","index","StyledUl","Oppsummering","GenericScoreBoard","useMemo","floor","length","antallSpillere","reduce","acc","current","Kløver","Kabal","toString","StyledOl","ol","winnerAnimation","keyframes","loserAnimations","delay","GameOver","sortertEtterTotalScore","StyledNav","nav","align","Navigation","rundeNummer","forrigeRunde","undefined","nesteRunde","Object","keys","GlobalStyle","createGlobalStyle","StyledH1","h1","StyledH2","h2","Scrollbar","Runde","Pass","Dronning","Grang","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.12065098.chunk.js","sourcesContent":["import { Spiller } from '../AppContext';\n\nconst localStorage = window.localStorage;\n\ninterface HistorikkSpill {\n    spillere: Spiller[];\n    dato: Date;\n}\n\nexport function lagreSpill(spillere: Spiller[]) {\n    const historikk = JSON.parse(localStorage.getItem('historikk') || '[]');\n    const klarForLagring: HistorikkSpill = {\n        dato: new Date(),\n        spillere: spillere,\n    };\n    localStorage.setItem('historikk', JSON.stringify([...historikk, klarForLagring]));\n}\n","import React, { createContext, ReactNode, useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router';\nimport { basePath } from './App/App';\nimport { injectTotalScore } from './injectTotalScore';\nimport { lagreSpill } from './App/manageHistorikk';\n\nexport interface Score {\n    pass?: number;\n    kløver?: number;\n    kabal?: {\n        pass?: number;\n        rest?: number;\n    };\n    dronning?: number;\n    grang?: number;\n    total: number;\n}\n\nexport interface Spiller {\n    navn: string;\n    score: Score;\n}\n\nexport enum Runder {\n    Oppsett,\n    Pass,\n    Kløver,\n    Kabal,\n    Dronning,\n    Grang,\n    GameOver,\n}\n\ninterface GameContextI {\n    runde: Runder;\n    spillere: Spiller[];\n    addSpiller: (navn: string) => void;\n    updateScore: (spiller: Spiller, score: Partial<Score>) => void;\n    setRunde: (runde: Runder) => void;\n    removeSpiller: (spiller: Spiller) => void;\n    lagreOgStartPåNytt: () => void;\n}\n\nconst localStorage = window.localStorage;\n\nconst localstorageSpillere = localStorage.getItem('spillere');\n\nconst initialState: GameContextI = {\n    spillere: localstorageSpillere ? JSON.parse(localstorageSpillere) : [],\n    runde: Runder.Oppsett,\n    addSpiller: () => null,\n    updateScore: () => null,\n    setRunde: () => null,\n    removeSpiller: () => null,\n    lagreOgStartPåNytt: () => null,\n};\n\nexport const GameContext = createContext<GameContextI>(initialState);\n\nexport function GameContextProvider(props: { children: ReactNode }) {\n    const [runde, setRunde] = useState<Runder>(initialState.runde);\n    const [spillere, setSpillere] = useState<Spiller[]>(initialState.spillere);\n\n    const addSpiller = (navn: string) => {\n        setSpillere((prevState) => [\n            ...prevState.filter((it) => it.navn !== navn),\n            { navn: navn, score: { total: 0 } },\n        ]);\n    };\n\n    const updateScore = (spiller: Spiller, score: Partial<Score>) => {\n        const updatedSpiller = {\n            ...spiller,\n            score: {\n                ...spiller.score,\n                ...score,\n            },\n        };\n        setSpillere((prevState) => [...prevState.filter((it) => it.navn !== spiller.navn), updatedSpiller]);\n    };\n\n    const removeSpiller = (spiller: Spiller) => {\n        setSpillere((prevState) => [...prevState.filter((it) => it.navn !== spiller.navn)]);\n    };\n\n    const spillereMedTotalScore = injectTotalScore(spillere);\n    const sortedSpillere = spillereMedTotalScore.sort((a, b) => (a.navn > b.navn ? 1 : -1));\n\n    localStorage.setItem('spillere', JSON.stringify(spillereMedTotalScore));\n    const lagreOgStartPåNytt = () => {\n        lagreSpill(spillereMedTotalScore);\n        setSpillere([]);\n        setRunde(Runder.Oppsett);\n    };\n\n    return (\n        <GameContext.Provider\n            value={{\n                setRunde,\n                spillere: sortedSpillere,\n                runde,\n                lagreOgStartPåNytt,\n                addSpiller,\n                updateScore,\n                removeSpiller,\n            }}\n        >\n            {props.children}\n        </GameContext.Provider>\n    );\n}\n","import { Spiller } from './AppContext';\n\nexport function injectTotalScore(spillere: Spiller[]): Spiller[] {\n    return spillere.map((spiller) => {\n        const totalScore =\n            (spiller.score.pass ?? 0) +\n            (spiller.score.kløver ?? 0) +\n            (spiller.score.kabal?.pass ?? 0) +\n            (spiller.score.kabal?.rest ?? 0) +\n            (spiller.score.dronning ?? 0) +\n            (spiller.score.grang ?? 0);\n\n        return {\n            ...spiller,\n            score: {\n                ...spiller.score,\n                total: totalScore,\n            },\n        };\n    });\n}\n","import styled, { css } from 'styled-components/macro';\n\nconst commonStyling = css`\n    background-color: #5555;\n    color: lightgoldenrodyellow;\n    font-family: inherit;\n    font-size: inherit;\n    border: 0.2rem solid #fff5;\n    padding: 0.2rem 0.5rem;\n`;\n\nexport const Button = styled.button`\n    ${commonStyling};\n`;\n\nexport const Input = styled.input`\n    ${commonStyling};\n`;\n","import * as React from 'react';\nimport { useContext, useState } from 'react';\nimport { GameContext } from '../../AppContext';\nimport styled from 'styled-components';\nimport { Button, Input } from '../../Components/Skjema';\n\nconst Style = styled.div``;\n\nconst StyledForm = styled.form`\n    padding: 1rem;\n    text-align: center;\n    > * {\n        margin: 0.5rem;\n    }\n`;\n\nconst SpillerListe = styled.ul`\n    margin-top: 1rem;\n    text-align: center;\n    font-size: 1.6rem;\n    li {\n        margin: 0.5rem;\n    }\n`;\n\nconst UsualSuspectsStyling = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    > * {\n        margin: 0.2rem;\n    }\n`;\n\nconst usualSuspects = ['Heidi', 'Jon', 'Ida', 'Daniel', 'Edgar', 'Kari', 'Irene', 'Einar'].sort();\n\nfunction Setup() {\n    const context = useContext(GameContext);\n    const [input, setInput] = useState('');\n\n    const onSubmit = (event: React.FormEvent) => {\n        event.preventDefault();\n        input && context.addSpiller(input);\n        setInput('');\n    };\n\n    return (\n        <Style>\n            <StyledForm onSubmit={onSubmit}>\n                <Input placeholder=\"Navn\" value={input} onChange={(e) => setInput(e.target.value)} />\n                <Button>Legg til</Button>\n            </StyledForm>\n            <UsualSuspectsStyling>\n                {usualSuspects\n                    .filter((navn) => !context.spillere.map((spiller) => spiller.navn).includes(navn))\n                    .map((navn) => (\n                        <Button key={navn} onClick={() => context.addSpiller(navn)}>\n                            {navn}\n                        </Button>\n                    ))}\n            </UsualSuspectsStyling>\n            <SpillerListe>\n                {context.spillere.map((spiller) => (\n                    <li key={spiller.navn} onClick={() => context.removeSpiller(spiller)}>\n                        {spiller.navn}\n                    </li>\n                ))}\n            </SpillerListe>\n        </Style>\n    );\n}\n\nexport default Setup;\n","import * as React from 'react';\nimport styled, { css } from 'styled-components';\nimport { Button, Input } from './Skjema';\n\nexport type ScoreRule = {\n    maxScore: number;\n    interval: number;\n};\n\ninterface Props {\n    setScore: (score: number) => void;\n    score?: number;\n    navn: string;\n    antallSpillere: number;\n    scoreRule: ScoreRule;\n    key: string;\n}\n\nconst ScoreStyle = styled.div`\n    display: flex;\n    margin-top: 0.5rem;\n`;\nconst StyledInput = styled(Input)`\n    width: 3rem;\n`;\nconst StyledButton = styled(Button)<{ currentScore: boolean }>`\n    min-width: 2.5rem;\n    margin-left: 0.2rem;\n    ${(props) =>\n        props.currentScore &&\n        css`\n            box-shadow: inset 0 0 0.75rem gold;\n        `}\n`;\nconst Scroller = styled.div`\n    display: inline-flex;\n    overflow-x: auto;\n    margin-left: 0.5rem;\n`;\n\nconst StyledLi = styled.li`\n    padding: 0.5rem;\n    background-color: #0003;\n    margin: 0.5rem.1rem;\n`;\n\nconst NavnStyle = styled.div``;\n\nexport function ScoreControll(props: Props) {\n    return (\n        <StyledLi>\n            <NavnStyle>{props.navn}</NavnStyle>\n            <ScoreStyle>\n                <StyledInput\n                    type=\"number\"\n                    value={props.score || ''}\n                    onChange={(event) => props.setScore(+event.target.value)}\n                />\n                <Scroller>\n                    {[...new Array(Math.abs(props.scoreRule.maxScore / props.scoreRule.interval) + 1)].map(\n                        (it, index) => {\n                            let score = index * props.scoreRule.interval;\n                            if (props.scoreRule.maxScore < 0) {\n                                score = -score;\n                            }\n                            return (\n                                <StyledButton\n                                    currentScore={props.score === score}\n                                    key={index}\n                                    onClick={() => props.setScore(score)}\n                                >\n                                    {score}\n                                </StyledButton>\n                            );\n                        }\n                    )}\n                </Scroller>\n            </ScoreStyle>\n        </StyledLi>\n    );\n}\n","import * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport styled from 'styled-components/macro';\nimport { GameContext } from '../AppContext';\nimport { ScoreControll, ScoreRule } from './ScoreControll';\n\nconst Style = styled.div`\n    margin: 2rem 0;\n`;\n\nconst StyledUl = styled.ul`\n    max-width: 100vw;\n`;\n\nconst Oppsummering = styled.div`\n    background-color: #0004;\n    padding: 1rem;\n    margin: 0.1rem;\n    text-align: center;\n`;\n\ninterface Props {\n    runde: 'pass' | 'kløver' | 'dronning' | 'grang';\n}\n\nfunction GenericScoreBoard(props: Props) {\n    const context = useContext(GameContext);\n\n    const scoreRule: ScoreRule = useMemo(() => {\n        const maxScore = Math.floor(52 / context.spillere.length);\n\n        switch (props.runde) {\n            case 'grang':\n                return { maxScore: -maxScore, interval: 1 };\n            case 'dronning':\n                return { maxScore: 12, interval: 4 };\n            default:\n                return { maxScore: maxScore, interval: 1 };\n        }\n    }, [props.runde, context.spillere.length]);\n\n    return (\n        <Style>\n            <StyledUl>\n                {context.spillere.map((spiller) => (\n                    <ScoreControll\n                        key={spiller.navn}\n                        setScore={(score) => context.updateScore(spiller, { [props.runde]: score })}\n                        score={spiller.score[props.runde]}\n                        navn={spiller.navn}\n                        antallSpillere={context.spillere.length}\n                        scoreRule={scoreRule}\n                    />\n                ))}\n            </StyledUl>\n            <Oppsummering>\n                Totalt {context.spillere.reduce((acc, current) => acc + (current.score[props.runde] ?? 0), 0)} poeng.\n            </Oppsummering>\n        </Style>\n    );\n}\n\nexport default GenericScoreBoard;\n","import * as React from 'react';\nimport GenericScoreBoard from '../../Components/GenericScoreBoard';\n\nfunction Kløver() {\n    return <GenericScoreBoard runde=\"pass\" />;\n}\n\nexport default Kløver;\n","import * as React from 'react';\nimport GenericScoreBoard from '../../Components/GenericScoreBoard';\n\nfunction Kløver() {\n    return <GenericScoreBoard runde=\"kløver\" />;\n}\n\nexport default Kløver;\n","import * as React from 'react';\nimport { useContext } from 'react';\nimport { GameContext } from '../../AppContext';\n\nfunction Kabal() {\n    const context = useContext(GameContext);\n\n    return (\n        <div>\n            {context.runde.toString()}\n            {JSON.stringify(context)}\n        </div>\n    );\n}\n\nexport default Kabal;\n","import * as React from 'react';\nimport GenericScoreBoard from '../../Components/GenericScoreBoard';\n\nfunction Kløver() {\n    return <GenericScoreBoard runde=\"dronning\" />;\n}\n\nexport default Kløver;\n","import * as React from 'react';\nimport GenericScoreBoard from '../../Components/GenericScoreBoard';\n\nfunction Kløver() {\n    return <GenericScoreBoard runde=\"grang\" />;\n}\n\nexport default Kløver;\n","import * as React from 'react';\nimport { useContext } from 'react';\nimport { GameContext } from '../../AppContext';\nimport styled, { keyframes } from 'styled-components/macro';\nimport { Button } from '../../Components/Skjema';\n\nconst StyledOl = styled.ol`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem 0 4rem;\n`;\n\nconst winnerAnimation = keyframes`\n  from {\n    transform: scale(10) rotate(15deg);\n  }\n  50% {\n    transform: scale(.7);\n  }\n`;\n\nconst loserAnimations = keyframes`\n  from {\n    transform: translateY(-3rem);\n    opacity: 0;\n  }\n  10% {\n    opacity: 1;\n  }\n  60% {\n    transform: translateY(.5rem);\n  }\n`;\n\nconst StyledLi = styled.li<{ delay: number }>`\n    padding: 0.2rem 0;\n    &:first-child {\n        animation: ${winnerAnimation} 0.5s both;\n        font-weight: bold;\n        font-size: 5rem;\n    }\n    &:not(:first-child) {\n        animation: ${loserAnimations} 0.2s ${(props) => props.delay}s both;\n        font-size: 1.5rem;\n    }\n`;\n\nconst StyledButton = styled(Button)`\n    margin: 2rem 0;\n    padding: 0.5rem 2rem;\n    animation: ${loserAnimations} 0.4s 3s both;\n`;\n\nfunction GameOver() {\n    const context = useContext(GameContext);\n    const sortertEtterTotalScore = context.spillere.sort((a, b) => a.score.total - b.score.total);\n\n    return (\n        <StyledOl>\n            {sortertEtterTotalScore.map((spiller, index) => (\n                <StyledLi delay={0.7 + index / 4} key={index}>\n                    {spiller.navn}: {spiller.score.total}\n                </StyledLi>\n            ))}\n            <StyledButton onClick={() => context.lagreOgStartPåNytt()}>Lagre og start nytt spill</StyledButton>\n        </StyledOl>\n    );\n}\n\nexport default GameOver;\n","import * as React from 'react';\nimport { useContext } from 'react';\nimport styled, { css } from 'styled-components';\nimport { GameContext, Runder } from '../AppContext';\nimport { Button } from '../Components/Skjema';\n\nconst StyledNav = styled.nav`\n    background-color: #0003;\n    display: flex;\n    justify-content: space-between;\n    box-shadow: 0 -1rem 1rem #0006;\n`;\n\nconst StyledButton = styled(Button)<{ align: 'left' | 'right' }>`\n    padding: 0.5rem 2rem;\n    ${(props) =>\n        props.align === 'right' &&\n        css`\n            margin-left: auto;\n        `};\n`;\n\nfunction Navigation() {\n    const context = useContext(GameContext);\n    const rundeNummer = context.runde;\n    const forrigeRunde = rundeNummer - 1 < 0 ? undefined : Runder[rundeNummer - 1];\n    const nesteRunde = rundeNummer + 1 > Object.keys(Runder).length ? undefined : Runder[rundeNummer + 1];\n\n    return (\n        <StyledNav>\n            {forrigeRunde && (\n                <StyledButton align=\"left\" onClick={() => context.setRunde(rundeNummer - 1)}>\n                    {forrigeRunde}\n                </StyledButton>\n            )}\n            {nesteRunde && (\n                <StyledButton align=\"right\" onClick={() => context.setRunde(rundeNummer + 1)}>\n                    {nesteRunde}\n                </StyledButton>\n            )}\n        </StyledNav>\n    );\n}\n\nexport default Navigation;\n","import React, { useContext } from 'react';\nimport { GameContext, GameContextProvider, Runder } from '../AppContext';\nimport { Route, Switch, useParams } from 'react-router';\nimport Setup from './Runder/Setup';\nimport Pass from './Runder/Pass';\nimport Kløver from './Runder/Kløver';\nimport Kabal from './Runder/Kabal';\nimport Dronning from './Runder/Dronning';\nimport Grang from './Runder/Grang';\nimport GameOver from './Runder/GameOver';\nimport styled, { createGlobalStyle } from 'styled-components/macro';\nimport Navigation from './Navigation';\n\nexport const basePath = '/femkamp/';\n\nconst GlobalStyle = createGlobalStyle`\n  html, body {\n    background-color: #555;\n    color: lightgoldenrodyellow;\n    height: 100vh;\n    font-size: calc(100% + 1vmin);\n    \n    *:focus {\n      filter: drop-shadow(0 0 .2rem yellow);\n      outline: none;\n    }\n    \n    input[type=number]::-webkit-inner-spin-button,\n    input[type=number]::-webkit-outer-spin-button {\n        -webkit-appearance: none;\n        margin: 0;\n    }\n    * {\n      box-sizing: border-box;\n    }\n }\n`;\n\nconst Style = styled.div`\n    display: grid;\n    height: 100vh;\n    grid-template-rows: auto auto 1fr auto;\n    grid-template-columns: 1fr;\n`;\n\nconst StyledH1 = styled.h1`\n    background-color: #0003;\n    padding: 0.7rem 0.5rem;\n    text-align: center;\n`;\n\nconst StyledH2 = styled.h2`\n    background-color: #fff1;\n    padding: 0.4rem;\n    text-align: center;\n    font-size: 1.3rem;\n    box-shadow: 0 0.5rem 0.5rem #0006;\n`;\n\nconst Scrollbar = styled.div`\n    overflow-x: auto;\n`;\n\nfunction Runde() {\n    const runde = useContext(GameContext).runde;\n    switch (runde) {\n        case Runder.Oppsett:\n            return <Setup />;\n        case Runder.Pass:\n            return <Pass />;\n        case Runder.Kløver:\n            return <Kløver />;\n        case Runder.Dronning:\n            return <Dronning />;\n        case Runder.Kabal:\n            return <Kabal />;\n        case Runder.Grang:\n            return <Grang />;\n        case Runder.GameOver:\n            return <GameOver />;\n    }\n}\n\nfunction App() {\n    const runde = useContext(GameContext).runde;\n\n    return (\n        <Style>\n            <GlobalStyle />\n            <StyledH1>Femkamp</StyledH1>\n            <StyledH2>{Runder[runde]}</StyledH2>\n            <Scrollbar>\n                <Runde />\n            </Scrollbar>\n            <Navigation />\n        </Style>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './reset.css';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { GameContextProvider } from './AppContext';\n\nReactDOM.render(\n    <React.StrictMode>\n        <GameContextProvider>\n            <App />\n        </GameContextProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}