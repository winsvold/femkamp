{"version":3,"sources":["AppContext.tsx","Components/Skjema.ts","App/Runder/Setup.tsx","Components/ScoreControll.tsx","Components/GenericScoreBoard.tsx","App/Runder/Pass.tsx","App/Runder/Kløver.tsx","App/Runder/Kabal.tsx","App/Runder/Dronning.tsx","App/Runder/Grang.tsx","App/Runder/GameOver.tsx","App/Navigation.tsx","App/App.tsx","serviceWorker.ts","index.tsx"],"names":["Runder","localStorage","window","localstorageSpillere","getItem","initialState","spillere","JSON","parse","runde","Oppsett","addSpiller","updateScore","setRunde","removeSpiller","GameContext","createContext","GameContextProvider","props","useParams","history","useHistory","useState","setSpillere","useEffect","setItem","stringify","sortedSpillere","sort","a","b","navn","Provider","value","push","basePath","prevState","filter","it","score","spiller","children","commonStyling","css","Button","styled","button","Input","input","Style","div","StyledForm","form","SpillerListe","ul","UsualSuspectsStyling","usualSuspects","Setup","context","useContext","setInput","console","log","onSubmit","event","preventDefault","placeholder","onChange","e","target","map","includes","onClick","ScoreStyle","StyledInput","StyledButton","currentScore","Scroller","StyledLi","li","NavnStyle","ScoreControll","type","setScore","Array","index","key","StyledUl","Oppsummering","GenericScoreBoard","reduce","acc","current","Kløver","Kabal","toString","StyledOl","ol","winnerAnimation","keyframes","loserAnimations","delay","GameOver","name","totalScore","pass","kløver","kabal","rest","dronning","grang","StyledNav","nav","StyledLink","Link","align","Navigation","rundeNummer","forrigeRunde","undefined","nesteRunde","Object","keys","length","to","GlobalStyle","createGlobalStyle","StyledH1","h1","StyledH2","h2","Scrollbar","App","path","component","Pass","Dronning","Grang","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.effb4f87.chunk.js","sourcesContent":["import React, { createContext, ReactNode, useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router';\nimport { basePath } from './App/App';\n\nexport interface Score {\n    pass?: number;\n    kløver?: number;\n    kabal?: {\n        pass?: number;\n        rest?: number;\n    };\n    dronning?: number;\n    grang?: number;\n}\n\nexport interface Spiller {\n    navn: string;\n    score: Score;\n}\n\nexport enum Runder {\n    Oppsett,\n    Pass,\n    Kløver,\n    Kabal,\n    Dronning,\n    Grang,\n    GameOver,\n}\n\ninterface GameContextI {\n    runde: Runder;\n    spillere: Spiller[];\n    addSpiller: (navn: string) => void;\n    updateScore: (spiller: Spiller, score: Partial<Score>) => void;\n    setRunde: (runde: Runder) => void;\n    removeSpiller: (spiller: Spiller) => void;\n}\n\nconst localStorage = window.localStorage;\n\nconst localstorageSpillere = localStorage.getItem('spillere');\n\nconst initialState: GameContextI = {\n    spillere: localstorageSpillere ? JSON.parse(localstorageSpillere) : [],\n    runde: Runder.Oppsett,\n    addSpiller: () => null,\n    updateScore: () => null,\n    setRunde: () => null,\n    removeSpiller: () => null,\n};\n\nexport const GameContext = createContext<GameContextI>(initialState);\n\nexport function GameContextProvider(props: { children: ReactNode }) {\n    const runde = (useParams<{ runde: string }>().runde as unknown) as Runder;\n    const history = useHistory();\n    const [spillere, setSpillere] = useState<Spiller[]>(initialState.spillere);\n\n    useEffect(() => {\n        localStorage.setItem('spillere', JSON.stringify(spillere));\n    }, [spillere]);\n\n    const setRunde = (runde: Runder) => {\n        history.push(`${basePath}${Runder[runde]}`);\n    };\n\n    const addSpiller = (navn: string) => {\n        setSpillere((prevState) => [...prevState.filter((it) => it.navn !== navn), { navn: navn, score: {} }]);\n    };\n\n    const updateScore = (spiller: Spiller, score: Partial<Score>) => {\n        setSpillere((prevState) => [\n            ...prevState.filter((it) => it.navn !== spiller.navn),\n            { ...spiller, score: { ...spiller.score, ...score } },\n        ]);\n    };\n\n    const removeSpiller = (spiller: Spiller) => {\n        setSpillere((prevState) => [...prevState.filter((it) => it.navn !== spiller.navn)]);\n    };\n\n    const sortedSpillere = spillere.sort((a, b) => (a.navn > b.navn ? 1 : -1));\n\n    return (\n        <GameContext.Provider\n            value={{ setRunde, spillere: sortedSpillere, runde, addSpiller, updateScore, removeSpiller }}\n        >\n            {props.children}\n        </GameContext.Provider>\n    );\n}\n","import styled, { css } from 'styled-components/macro';\n\nconst commonStyling = css`\n    background-color: #5555;\n    color: lightgoldenrodyellow;\n    font-family: inherit;\n    font-size: inherit;\n    border: 0.2rem solid #fff5;\n    padding: 0.2rem 0.5rem;\n`;\n\nexport const Button = styled.button`\n    ${commonStyling};\n`;\n\nexport const Input = styled.input`\n    ${commonStyling};\n`;\n","import * as React from 'react';\nimport { useContext, useState } from 'react';\nimport { GameContext } from '../../AppContext';\nimport styled from 'styled-components';\nimport { Button, Input } from '../../Components/Skjema';\n\nconst Style = styled.div``;\n\nconst StyledForm = styled.form`\n    padding: 1rem;\n    text-align: center;\n    > * {\n        margin: 0.5rem;\n    }\n`;\n\nconst SpillerListe = styled.ul`\n    margin-top: 1rem;\n    text-align: center;\n    font-size: 1.6rem;\n    li {\n        margin: 0.5rem;\n    }\n`;\n\nconst UsualSuspectsStyling = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    > * {\n        margin: 0.2rem;\n    }\n`;\n\nconst usualSuspects = ['Heidi', 'Jon', 'Ida', 'Daniel', 'Edgar', 'Kari', 'Irene', 'Einar'].sort();\n\nfunction Setup() {\n    const context = useContext(GameContext);\n    const [input, setInput] = useState('');\n\n    const onSubmit = (event: React.FormEvent) => {\n        event.preventDefault();\n        input && context.addSpiller(input);\n        setInput('');\n    };\n\n    console.log(context.spillere);\n\n    return (\n        <Style>\n            <StyledForm onSubmit={onSubmit}>\n                <Input placeholder=\"Navn\" value={input} onChange={(e) => setInput(e.target.value)} />\n                <Button>Legg til</Button>\n            </StyledForm>\n            <UsualSuspectsStyling>\n                {usualSuspects\n                    .filter((navn) => !context.spillere.map((spiller) => spiller.navn).includes(navn))\n                    .map((navn) => (\n                        <Button onClick={() => context.addSpiller(navn)}>{navn}</Button>\n                    ))}\n            </UsualSuspectsStyling>\n            <SpillerListe>\n                {context.spillere.map((spiller) => (\n                    <li onClick={() => context.removeSpiller(spiller)}>{spiller.navn}</li>\n                ))}\n            </SpillerListe>\n        </Style>\n    );\n}\n\nexport default Setup;\n","import * as React from 'react';\nimport styled, { css } from 'styled-components';\nimport { Button, Input } from './Skjema';\n\ninterface Props {\n    setScore: (score: number) => void;\n    score?: number;\n    navn: string;\n}\n\nconst ScoreStyle = styled.div`\n    display: flex;\n    margin-top: 0.5rem;\n`;\nconst StyledInput = styled(Input)`\n    width: 3rem;\n`;\nconst StyledButton = styled(Button)<{ currentScore: boolean }>`\n    min-width: 2.5rem;\n    margin-left: 0.2rem;\n    ${(props) =>\n        props.currentScore &&\n        css`\n            box-shadow: inset 0 0 0.75rem gold;\n        `}\n`;\nconst Scroller = styled.div`\n    display: inline-flex;\n    overflow-x: auto;\n    margin-left: 0.5rem;\n`;\n\nconst StyledLi = styled.li`\n    padding: 0.5rem;\n    background-color: #0003;\n    margin: 0.5rem.1rem;\n`;\n\nconst NavnStyle = styled.div``;\n\nexport function ScoreControll(props: Props) {\n    return (\n        <StyledLi>\n            <NavnStyle>{props.navn}</NavnStyle>\n            <ScoreStyle>\n                <StyledInput\n                    type=\"number\"\n                    value={props.score}\n                    onChange={(event) => props.setScore(+event.target.value)}\n                />\n                <Scroller>\n                    {[...new Array(26)].map((it, index) => (\n                        <StyledButton\n                            currentScore={props.score === index}\n                            key={index}\n                            onClick={() => props.setScore(index)}\n                        >\n                            {index}\n                        </StyledButton>\n                    ))}\n                </Scroller>\n            </ScoreStyle>\n        </StyledLi>\n    );\n}\n","import * as React from 'react';\nimport { useContext } from 'react';\nimport styled from 'styled-components/macro';\nimport { GameContext } from '../AppContext';\nimport { ScoreControll } from './ScoreControll';\n\nconst Style = styled.div`\n    margin: 2rem 0;\n`;\n\nconst StyledUl = styled.ul`\n    max-width: 100vw;\n`;\n\nconst Oppsummering = styled.div`\n    background-color: #0004;\n    padding: 1rem;\n    margin: 0.1rem;\n    text-align: center;\n`;\n\ninterface Props {\n    runde: 'pass' | 'kløver' | 'dronning' | 'grang';\n}\n\nfunction GenericScoreBoard(props: Props) {\n    const context = useContext(GameContext);\n\n    return (\n        <Style>\n            <StyledUl>\n                {context.spillere.map((spiller) => (\n                    <ScoreControll\n                        setScore={(score) => context.updateScore(spiller, { [props.runde]: score })}\n                        score={spiller.score[props.runde]}\n                        navn={spiller.navn}\n                    />\n                ))}\n            </StyledUl>\n            <Oppsummering>\n                Totalt {context.spillere.reduce((acc, current) => acc + (current.score[props.runde] ?? 0), 0)} poeng.\n            </Oppsummering>\n        </Style>\n    );\n}\n\nexport default GenericScoreBoard;\n","import * as React from 'react';\nimport GenericScoreBoard from '../../Components/GenericScoreBoard';\n\nfunction Kløver() {\n    return <GenericScoreBoard runde=\"pass\" />;\n}\n\nexport default Kløver;\n","import * as React from 'react';\nimport GenericScoreBoard from '../../Components/GenericScoreBoard';\n\nfunction Kløver() {\n    return <GenericScoreBoard runde=\"kløver\" />;\n}\n\nexport default Kløver;\n","import * as React from 'react';\nimport { useContext } from 'react';\nimport { GameContext } from '../../AppContext';\n\nfunction Kabal() {\n    const context = useContext(GameContext);\n\n    return (\n        <div>\n            {context.runde.toString()}\n            {JSON.stringify(context)}\n        </div>\n    );\n}\n\nexport default Kabal;\n","import * as React from 'react';\nimport GenericScoreBoard from '../../Components/GenericScoreBoard';\n\nfunction Kløver() {\n    return <GenericScoreBoard runde=\"dronning\" />;\n}\n\nexport default Kløver;\n","import * as React from 'react';\nimport GenericScoreBoard from '../../Components/GenericScoreBoard';\n\nfunction Kløver() {\n    return <GenericScoreBoard runde=\"grang\" />;\n}\n\nexport default Kløver;\n","import * as React from 'react';\nimport { useContext } from 'react';\nimport { GameContext } from '../../AppContext';\nimport styled, { keyframes } from 'styled-components/macro';\n\nconst StyledOl = styled.ol`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n`;\n\nconst winnerAnimation = keyframes`\n  from {\n    transform: scale(10) rotate(15deg);\n  }\n  50% {\n    transform: scale(.7);\n  }\n`;\n\nconst loserAnimations = keyframes`\n  from {\n    transform: translateY(-3rem);\n    opacity: 0;\n  }\n  10% {\n    opacity: 1;\n  }\n  60% {\n    transform: translateY(.5rem);\n  }\n`;\n\nconst StyledLi = styled.li<{ delay: number }>`\n    margin: 0.5rem 0;\n    &:first-child {\n        animation: ${winnerAnimation} 0.5s both;\n        font-weight: bold;\n        font-size: 5rem;\n    }\n    &:not(:first-child) {\n        animation: ${loserAnimations} 0.2s ${(props) => props.delay}s both;\n        font-size: 1.5rem;\n    }\n`;\n\nfunction GameOver() {\n    const context = useContext(GameContext);\n\n    const score = context.spillere\n        .map((spiller) => ({\n            name: spiller.navn,\n            totalScore:\n                (spiller.score.pass ?? 0) +\n                (spiller.score.kløver ?? 0) +\n                (spiller.score.kabal?.pass ?? 0) +\n                (spiller.score.kabal?.rest ?? 0) +\n                (spiller.score.dronning ?? 0) -\n                (spiller.score.grang ?? 0),\n        }))\n        .sort((a, b) => a.totalScore - b.totalScore);\n\n    return (\n        <StyledOl>\n            {score.map((spiller, index) => (\n                <StyledLi delay={0.7 + index / 4}>\n                    {spiller.name}: {spiller.totalScore}\n                </StyledLi>\n            ))}\n        </StyledOl>\n    );\n}\n\nexport default GameOver;\n","import * as React from 'react';\nimport styled, { css } from 'styled-components';\nimport { useContext } from 'react';\nimport { GameContext, Runder } from '../AppContext';\nimport { Link } from 'react-router-dom';\nimport { basePath } from './App';\n\nconst StyledNav = styled.nav`\n    background-color: #0003;\n    display: flex;\n    justify-content: space-between;\n    box-shadow: 0 -1rem 1rem #0006;\n`;\n\nconst StyledLink = styled(Link)<{ align: 'left' | 'right' }>`\n    display: block;\n    padding: 1rem 2rem;\n    color: lightgoldenrodyellow;\n    border: solid 0.2rem #fff6;\n    ${(props) =>\n        props.align === 'right' &&\n        css`\n            margin-left: auto;\n        `};\n`;\n\nfunction Navigation() {\n    const context = useContext(GameContext);\n    const rundeNummer = +Runder[context.runde];\n    const forrigeRunde = rundeNummer - 1 < 0 ? undefined : Runder[rundeNummer - 1];\n    const nesteRunde = rundeNummer + 1 > Object.keys(Runder).length ? undefined : Runder[rundeNummer + 1];\n\n    return (\n        <StyledNav>\n            {forrigeRunde && (\n                <StyledLink align=\"left\" to={basePath + forrigeRunde}>\n                    {forrigeRunde}\n                </StyledLink>\n            )}\n            {nesteRunde && (\n                <StyledLink align=\"right\" to={basePath + nesteRunde}>\n                    {nesteRunde}\n                </StyledLink>\n            )}\n        </StyledNav>\n    );\n}\n\nexport default Navigation;\n","import React from 'react';\nimport { GameContextProvider, Runder } from '../AppContext';\nimport { Route, Switch, useParams } from 'react-router';\nimport Setup from './Runder/Setup';\nimport Pass from './Runder/Pass';\nimport Kløver from './Runder/Kløver';\nimport Kabal from './Runder/Kabal';\nimport Dronning from './Runder/Dronning';\nimport Grang from './Runder/Grang';\nimport GameOver from './Runder/GameOver';\nimport styled, { createGlobalStyle } from 'styled-components/macro';\nimport Navigation from './Navigation';\n\nexport const basePath = '/femkamp/';\n\nconst GlobalStyle = createGlobalStyle`\n  html, body {\n    background-color: #555;\n    color: lightgoldenrodyellow;\n    height: 100vh;\n    font-size: calc(100% + 1vmin);\n    \n    *:focus {\n      filter: drop-shadow(0 0 .2rem yellow);\n      outline: none;\n    }\n    \n    input[type=number]::-webkit-inner-spin-button,\n    input[type=number]::-webkit-outer-spin-button {\n        -webkit-appearance: none;\n        margin: 0;\n    }\n    * {\n      box-sizing: border-box;\n    }\n }\n`;\n\nconst Style = styled.div`\n    display: grid;\n    height: 100vh;\n    grid-template-rows: auto auto 1fr auto;\n    grid-template-columns: 1fr;\n`;\n\nconst StyledH1 = styled.h1`\n    background-color: #0003;\n    padding: 0.7rem 0.5rem;\n    text-align: center;\n`;\n\nconst StyledH2 = styled.h2`\n    background-color: #fff1;\n    padding: 0.4rem;\n    text-align: center;\n    font-size: 1.3rem;\n    box-shadow: 0 0.5rem 0.5rem #0006;\n`;\n\nconst Scrollbar = styled.div`\n    overflow-x: auto;\n`;\n\nfunction App() {\n    const runde = useParams<{ runde: string }>().runde;\n\n    return (\n        <GameContextProvider>\n            <GlobalStyle />\n            <Style>\n                <StyledH1>Femkamp</StyledH1>\n                <StyledH2>{runde}</StyledH2>\n                <Scrollbar>\n                    <Switch>\n                        <Route path={basePath + Runder[Runder.Oppsett]} component={Setup} />\n                        <Route path={basePath + Runder[Runder.Pass]} component={Pass} />\n                        <Route path={basePath + Runder[Runder.Kløver]} component={Kløver} />\n                        <Route path={basePath + Runder[Runder.Kabal]} component={Kabal} />\n                        <Route path={basePath + Runder[Runder.Dronning]} component={Dronning} />\n                        <Route path={basePath + Runder[Runder.Grang]} component={Grang} />\n                        <Route path={basePath + Runder[Runder.GameOver]} component={GameOver} />\n                    </Switch>\n                </Scrollbar>\n                <Navigation />\n            </Style>\n        </GameContextProvider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './reset.css';\nimport App, { basePath } from './App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport { Runder } from './AppContext';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Switch>\n                <Route path={`${basePath}:runde`} component={App} />\n                <Route path={''} render={() => <Redirect to={`${basePath}${Runder[Runder.Oppsett]}`} />} />\n            </Switch>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}